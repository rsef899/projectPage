{
    "Projects": {
      "Software": [
            {
              "Title": "Budgeter (Budgeting Web Application)",
              "Icons": [
                "https://skillicons.dev/icons?i=python",
                "https://skillicons.dev/icons?i=flask",
                "https://skillicons.dev/icons?i=react",
                "https://skillicons.dev/icons?i=nginx"
              ],
              "Description": "• An application I built modelling what I was doing mannualy on Excel, mostly to track expenses and sales, but also a page to help with my side hobby of buidling PCs<br><br>• Used a combination of React for the front-end and Python/Flask with SQLite for the back-end<br><br>• Worked on a Linux based cloud server using Nginx to deploy applications",
              "images": [
                "assets/project_pictures/Budgeter/Budgeter1.png",
                "assets/project_pictures/Budgeter/Budgeter2.png",
                "assets/project_pictures/Budgeter/Budgeter3.png"
              ]
          },
          {
            "Title": "American Sign Language Detection",
            "Icons": [
              "https://skillicons.dev/icons?i=python",
              "https://skillicons.dev/icons?i=pytorch",
              "https://skillicons.dev/icons?i=git"
            ],
            "Description": "• An application that is used to train a model to be able to predict American sign language characters, also has the ability to detect the signs from pictures users can take from their own device<br><br>• In a team, Used PyTorch to implement three neural networks and also created a wrapper to train and predict the signs<br><br>• Built an interactive UI using PyQt",
            "images": [
              "assets/project_pictures/ASL/ASL1.png",
              "assets/project_pictures/ASL/ASL2.png",
              "assets/project_pictures/ASL/ASL3.png"
            ]
          },
          {
            "Title": "Portfolio Website",
            "Icons": [
              "https://skillicons.dev/icons?i=vue",
              "https://skillicons.dev/icons?i=tailwind",
              "https://skillicons.dev/icons?i=pinia",
              "assets/icons/vercel.png"
            ],
            "Description": "• This Portfolio website was built using Vue to showcase some of my skils and projects I have undertaken in my own time, but also at university<br><br>• The Projects componant is made from scratch and I have further plans of making it more customisable, as well as making it a public Vue componant, for other people creating portfolios to use",
            "images": [
              "assets/project_pictures/Portfolio/Portfolio1.png",
              "assets/project_pictures/Portfolio/Portfolio2.png"
            ]
          }
      ],
      "Frimware & Digital" : [
          {
            "Title": "Wireless Baby Weighing Scale",
            "Icons": [
              "https://skillicons.dev/icons?i=c",
              "https://skillicons.dev/icons?i=raspberrypi",
              "assets/icons/awsBS.png",
              "assets/icons/cmake.png"

            ],
            "Description": "• Created, in a team of 7, a wireless scale from the ground up, including hardware for weight measurement and a user-interactive app<br><br>• Developed firmware for an ARM-based Raspberry Pi Pico, utilising peripherals such as ADC, Timer, UART, and I2C<br><br>• Firmware programmed using C and CMake, the scale was configured to use HTTPS to communicate with our backend<br><br>• Deployed our team's software backend using AWS Elastic Beanstalk and managed the server setup, including TLS configuration, through AWS EC2",
            "images": [
              "assets/project_pictures/Capstone/Capstone1.png",
              "assets/project_pictures/Capstone/Capstone2.png",
              "assets/project_pictures/Capstone/Capstone3.png"
            ]
        },
        {
          "Title": "Line Following Robot",
          "Icons": [
            "https://skillicons.dev/icons?i=c"
          ],
          "Description": "• Line following, maze completing robot which computes the shortest path in the maze when given points it must visit, Firmware implemented on an Arm Cortex M3 PSoC<br><br>• Created light sensing circuitry and then designed the corresponding PCB using Altium designer<br><br>• Designed shortest path algorithms for the robot to follow and made use of them through the firmware<br><br>• Interfaced the motors with components such as PWM generators and quadrature encoders/decoders. ",
          "images": [
            "assets/project_pictures/301Robot/301Robot.mp4",
            "assets/project_pictures/301Robot/301Robot2.png",
            "assets/project_pictures/301Robot/301Robot3.png"
          ]
        },

        {
          "Title": "32-bit Processor",
          "Icons": [
            "assets/icons/vhdl.png"
          ],
          "Description": "• Developed a Reactive Proccessor designed for control-dominated applications in reactive environments, integrated with a main NIOS processor<br><br>• Implemented a specialized Instruction Set Architecture based on RISK-V, tailored for real-time and reactive event handling.<br><br>• Designed and implemented the ReCOP's architecture, including fetch, decode, execute, and writeback stages, optimizing performance and predictability. <br><br>• Developed testbenches and conducted extensive testing using Intel Quartus and Modelsim to ensure functionality and reliability under various operational scenarios",
          "images": [
            "https://cdn.vuetifyjs.com/images/carousel/squirrel.jpg",
            "https://cdn.vuetifyjs.com/images/carousel/sky.jpg",
            "https://cdn.vuetifyjs.com/images/carousel/bird.jpg"
          ]
      },

      {
        "Title": "Flappy Bird Game",
        "Icons": [
          "assets/icons/vhdl.png"
        ],
        "Description": "• Flappy bird inspired game with a team of three people to be used on an Intel Cyclone V FPGA board<br><br>• The game was programmed using VHDL, hardware descriptionlanguage<br><br>• The FPGA used is interfaced with periphirals such as a VGA display, which renders sprites from MIF files, keyboard and mouse so the user can play the game",
        "images": [
          "assets/project_pictures/305FB/305FB2.png",
          "assets/project_pictures/305FB/305FB1.mp4",
          "assets/project_pictures/305FB/305FB3.png"
        ]
    }

      ]

  }
}
  